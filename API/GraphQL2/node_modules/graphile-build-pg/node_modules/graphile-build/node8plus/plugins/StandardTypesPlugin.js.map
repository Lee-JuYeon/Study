{"version":3,"sources":["../../src/plugins/StandardTypesPlugin.js"],"names":["StandardTypesPlugin","builder","hook","build","stringType","name","description","graphql","GraphQLScalarType","serialize","value","String","parseValue","parseLiteral","ast","kind","Kind","STRING","Error","Cursor","addType","_","newWithHooks","GraphQLNonNull","GraphQLObjectType","GraphQLBoolean","inflection","builtin","wrapDescription","fields","fieldWithHooks","hasNextPage","addDataGenerator","calculateHasNextPage","type","isPageInfoHasNextPageField","hasPreviousPage","calculateHasPreviousPage","isPageInfoHasPreviousPageField","__origin","isPageInfo"],"mappings":";;;;;;;AAEA;;IAEyBA,mB,GAAT,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AACpD;AACAA,EAAAA,OAAO,CAACC,IAAR,CACE,OADF,EAEGC,KAAD,IAAyB;AACvB,UAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,WAAP,KACjB,IAAIH,KAAK,CAACI,OAAN,CAAcC,iBAAlB,CAAoC;AAClCH,MAAAA,IADkC;AAElCC,MAAAA,WAFkC;AAGlCG,MAAAA,SAAS,EAAEC,KAAK,IAAIC,MAAM,CAACD,KAAD,CAHQ;AAIlCE,MAAAA,UAAU,EAAEF,KAAK,IAAIC,MAAM,CAACD,KAAD,CAJO;AAKlCG,MAAAA,YAAY,EAAEC,GAAG,IAAI;AACnB,YAAIA,GAAG,CAACC,IAAJ,KAAaC,eAAKC,MAAtB,EAA8B;AAC5B,gBAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,eAAOJ,GAAG,CAACJ,KAAX;AACD;AAViC,KAApC,CADF;;AAcA,UAAMS,MAAM,GAAGf,UAAU,CACvB,QADuB,EAEvB,sEAFuB,CAAzB;AAIAD,IAAAA,KAAK,CAACiB,OAAN,CAAcD,MAAd,EAAsB,yBAAtB;AACA,WAAOhB,KAAP;AACD,GAvBH,EAwBE,CAAC,eAAD,CAxBF;AA0BAF,EAAAA,OAAO,CAACC,IAAR,CACE,MADF,EAEE,CAACmB,CAAD,EAAQlB,KAAR,KAAkB;AAChB,UAAM;AACJmB,MAAAA,YADI;AAEJf,MAAAA,OAAO,EAAE;AAAEgB,QAAAA,cAAF;AAAkBC,QAAAA,iBAAlB;AAAqCC,QAAAA;AAArC,OAFL;AAGJC,MAAAA;AAHI,QAIFvB,KAJJ,CADgB,CAMhB;;AACA;;AACAmB,IAAAA,YAAY,CACVE,iBADU,EAEV;AACEnB,MAAAA,IAAI,EAAEqB,UAAU,CAACC,OAAX,CAAmB,UAAnB,CADR;AAEErB,MAAAA,WAAW,EAAEH,KAAK,CAACyB,eAAN,CACX,+CADW,EAEX,MAFW,CAFf;AAMEC,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,MAAyB;AAC/BC,QAAAA,WAAW,EAAED,cAAc,CACzB,aADyB,EAEzB,CAAC;AAAEE,UAAAA;AAAF,SAAD,KAA0B;AACxBA,UAAAA,gBAAgB,CAAC,MAAM;AACrB,mBAAO;AACLC,cAAAA,oBAAoB,EAAE;AADjB,aAAP;AAGD,WAJe,CAAhB;AAKA,iBAAO;AACL3B,YAAAA,WAAW,EAAEH,KAAK,CAACyB,eAAN,CACX,iDADW,EAEX,OAFW,CADR;AAKLM,YAAAA,IAAI,EAAE,IAAIX,cAAJ,CAAmBE,cAAnB;AALD,WAAP;AAOD,SAfwB,EAgBzB;AAAEU,UAAAA,0BAA0B,EAAE;AAA9B,SAhByB,CADI;AAmB/BC,QAAAA,eAAe,EAAEN,cAAc,CAC7B,iBAD6B,EAE7B,CAAC;AAAEE,UAAAA;AAAF,SAAD,KAA0B;AACxBA,UAAAA,gBAAgB,CAAC,MAAM;AACrB,mBAAO;AACLK,cAAAA,wBAAwB,EAAE;AADrB,aAAP;AAGD,WAJe,CAAhB;AAKA,iBAAO;AACL/B,YAAAA,WAAW,EAAEH,KAAK,CAACyB,eAAN,CACX,kDADW,EAEX,OAFW,CADR;AAKLM,YAAAA,IAAI,EAAE,IAAIX,cAAJ,CAAmBE,cAAnB;AALD,WAAP;AAOD,SAf4B,EAgB7B;AAAEa,UAAAA,8BAA8B,EAAE;AAAlC,SAhB6B;AAnBA,OAAzB;AANV,KAFU,EA+CV;AACEC,MAAAA,QAAQ,EAAG,yBADb;AAEEC,MAAAA,UAAU,EAAE;AAFd,KA/CU,CAAZ;AAoDA,WAAOnB,CAAP;AACD,GA/DH,EAgEE,CAAC,eAAD,EAAkB,UAAlB,CAhEF;AAkED,C","sourcesContent":["// @flow\nimport type { Plugin, Build } from \"../SchemaBuilder\";\nimport { Kind } from \"graphql/language\";\n\nexport default (function StandardTypesPlugin(builder) {\n  // XXX: this should be in an \"init\" plugin, but PgTypesPlugin requires it in build - fix that, then fix this\n  builder.hook(\n    \"build\",\n    (build: Build): Build => {\n      const stringType = (name, description) =>\n        new build.graphql.GraphQLScalarType({\n          name,\n          description,\n          serialize: value => String(value),\n          parseValue: value => String(value),\n          parseLiteral: ast => {\n            if (ast.kind !== Kind.STRING) {\n              throw new Error(\"Can only parse string values\");\n            }\n            return ast.value;\n          },\n        });\n\n      const Cursor = stringType(\n        \"Cursor\",\n        \"A location in a connection that can be used for resuming pagination.\"\n      );\n      build.addType(Cursor, \"graphile-build built-in\");\n      return build;\n    },\n    [\"StandardTypes\"]\n  );\n  builder.hook(\n    \"init\",\n    (_: {}, build) => {\n      const {\n        newWithHooks,\n        graphql: { GraphQLNonNull, GraphQLObjectType, GraphQLBoolean },\n        inflection,\n      } = build;\n      // https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo\n      /* const PageInfo = */\n      newWithHooks(\n        GraphQLObjectType,\n        {\n          name: inflection.builtin(\"PageInfo\"),\n          description: build.wrapDescription(\n            \"Information about pagination in a connection.\",\n            \"type\"\n          ),\n          fields: ({ fieldWithHooks }) => ({\n            hasNextPage: fieldWithHooks(\n              \"hasNextPage\",\n              ({ addDataGenerator }) => {\n                addDataGenerator(() => {\n                  return {\n                    calculateHasNextPage: true,\n                  };\n                });\n                return {\n                  description: build.wrapDescription(\n                    \"When paginating forwards, are there more items?\",\n                    \"field\"\n                  ),\n                  type: new GraphQLNonNull(GraphQLBoolean),\n                };\n              },\n              { isPageInfoHasNextPageField: true }\n            ),\n            hasPreviousPage: fieldWithHooks(\n              \"hasPreviousPage\",\n              ({ addDataGenerator }) => {\n                addDataGenerator(() => {\n                  return {\n                    calculateHasPreviousPage: true,\n                  };\n                });\n                return {\n                  description: build.wrapDescription(\n                    \"When paginating backwards, are there more items?\",\n                    \"field\"\n                  ),\n                  type: new GraphQLNonNull(GraphQLBoolean),\n                };\n              },\n              { isPageInfoHasPreviousPageField: true }\n            ),\n          }),\n        },\n        {\n          __origin: `graphile-build built-in`,\n          isPageInfo: true,\n        }\n      );\n      return _;\n    },\n    [\"StandardTypes\", \"PageInfo\"]\n  );\n}: Plugin);\n"],"file":"StandardTypesPlugin.js"}