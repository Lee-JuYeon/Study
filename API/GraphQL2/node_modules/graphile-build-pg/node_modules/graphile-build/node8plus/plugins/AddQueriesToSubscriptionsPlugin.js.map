{"version":3,"sources":["../../src/plugins/AddQueriesToSubscriptionsPlugin.js"],"names":["AddQueriesToSubscriptionsPlugin","builder","subscriptions","live","hook","fields","build","context","extend","getTypeByName","inflection","scope","isRootSubscription","fieldWithHooks","Query","builtin","queryFields","getFields","subscriptionFields","Object","keys","reduce","memo","queryFieldName","queryField","oldResolve","resolve","description","type","args","newArgs","arg","name","defaultValue","e","info","rootValue","liveAbort","subscribe","liveCoordinator","deprecationReason","isDeprecated","undefined","isLiveField","originalField"],"mappings":"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","sourcesContent":["// @flow\nimport type { Plugin } from \"../SchemaBuilder\";\nimport type { GraphQLObjectType } from \"graphql\";\n\nconst AddQueriesToSubscriptionsPlugin: Plugin = function (\n  builder,\n  { subscriptions, live }\n) {\n  if (!subscriptions || !live) {\n    return;\n  }\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, context) => {\n      const { extend, getTypeByName, inflection } = build;\n      const {\n        scope: { isRootSubscription },\n        fieldWithHooks,\n      } = context;\n      if (!isRootSubscription) {\n        return fields;\n      }\n\n      const Query: GraphQLObjectType = getTypeByName(\n        inflection.builtin(\"Query\")\n      );\n      const queryFields = Query.getFields();\n      const subscriptionFields = Object.keys(queryFields).reduce(\n        (memo, queryFieldName) => {\n          const queryField = queryFields[queryFieldName];\n          const oldResolve = queryField.resolve;\n          memo[queryFieldName] = fieldWithHooks(\n            inflection.live(queryFieldName),\n            {\n              description: (queryField.description || \"\") + \" (live)\",\n              type: queryField.type,\n              args: (queryField.args || []).reduce((newArgs, arg) => {\n                const { name, description, type, defaultValue } = arg;\n                newArgs[name] = {\n                  description,\n                  type,\n                  defaultValue,\n                };\n                return newArgs;\n              }, {}),\n              ...(oldResolve\n                ? {\n                    resolve: async (...args) => {\n                      try {\n                        return await oldResolve(...args);\n                      } catch (e) {\n                        const info = args[3];\n                        if (\n                          info.rootValue &&\n                          typeof info.rootValue.liveAbort === \"function\"\n                        ) {\n                          info.rootValue.liveAbort(e);\n                        }\n                        throw e;\n                      }\n                    },\n                  }\n                : null),\n              subscribe: build.liveCoordinator.subscribe,\n              deprecationReason: queryField.isDeprecated\n                ? queryField.deprecationReason\n                : undefined,\n            },\n            {\n              isLiveField: true,\n              originalField: queryField,\n            }\n          );\n          return memo;\n        },\n        {}\n      );\n      return extend(fields, subscriptionFields);\n    },\n    [\"AddQueriesToSubscriptions\"]\n  );\n};\nexport default AddQueriesToSubscriptionsPlugin;\n"],"file":"AddQueriesToSubscriptionsPlugin.js"}