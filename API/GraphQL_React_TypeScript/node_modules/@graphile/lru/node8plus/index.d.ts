interface LRUOptions<KeyType, ValueType> {
    maxLength: number;
    dispose?: (key: KeyType, value: ValueType) => void;
}
/**
 * An tiny LRU cache with maximum count, identical weighting and no expiration.
 */
export default class LRU<KeyType = any, ValueType = any> {
    length: number;
    private _maxLength;
    private _head;
    private _tail;
    private _cache;
    private _dispose;
    constructor({ maxLength, dispose }: LRUOptions<KeyType, ValueType>);
    reset(): void;
    get(key: KeyType): ValueType | undefined;
    set(key: KeyType, value: ValueType): void;
    private _hoist;
    private _add;
}
export {};
