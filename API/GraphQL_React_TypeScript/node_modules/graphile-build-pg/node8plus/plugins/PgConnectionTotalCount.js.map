{"version":3,"sources":["../../src/plugins/PgConnectionTotalCount.js"],"names":["PgConnectionTotalCount","builder","hook","fields","build","context","extend","inflection","graphql","GraphQLInt","GraphQLNonNull","pgSql","sql","scope","isPgRowConnectionType","pgIntrospection","table","nodeType","fieldWithHooks","Self","nodeTypeName","name","kind","tableType","totalCount","addDataGenerator","pgAggregateQuery","aggregateQueryBuilder","select","fragment","description","wrapDescription","type","resolve","parent","aggregates","isPgConnectionTotalCountField"],"mappings":";;;;;;;IAGyBA,sB,GAAT,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AACvDA,EAAAA,OAAO,CAACC,IAAR,CACE,0BADF,EAEE,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,KAA4B;AAC1B,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAHL;AAIJC,MAAAA,KAAK,EAAEC;AAJH,QAKFR,KALJ;AAMA,UAAM;AACJS,MAAAA,KAAK,EAAE;AAAEC,QAAAA,qBAAF;AAAyBC,QAAAA,eAAe,EAAEC,KAA1C;AAAiDC,QAAAA;AAAjD,OADH;AAEJC,MAAAA,cAFI;AAGJC,MAAAA;AAHI,QAIFd,OAJJ;;AAMA,QAAI,CAACS,qBAAL,EAA4B;AAC1B,aAAOX,MAAP;AACD;;AAED,UAAMiB,YAAY,GAChBH,QAAQ,IAAIA,QAAQ,CAACI,IAArB,GACIJ,QAAQ,CAACI,IADb,GAEIL,KAAK,IAAIA,KAAK,CAACM,IAAN,KAAe,OAAxB,GACAf,UAAU,CAACgB,SAAX,CAAqBP,KAArB,CADA,GAEA,IALN;;AAMA,QAAI,CAACI,YAAL,EAAmB;AACjB,aAAOjB,MAAP;AACD;;AAED,WAAOG,MAAM,CACXH,MADW,EAEX;AACEqB,MAAAA,UAAU,EAAEN,cAAc,CACxB,YADwB,EAExB,CAAC;AAAEO,QAAAA;AAAF,OAAD,KAA0B;AACxBA,QAAAA,gBAAgB,CAAC,MAAM;AACrB,iBAAO;AACLC,YAAAA,gBAAgB,EAAEC,qBAAqB,IAAI;AACzCA,cAAAA,qBAAqB,CAACC,MAAtB,CACEhB,GAAG,CAACiB,QAAS,UADf,EAEE,YAFF;AAID;AANI,WAAP;AAQD,SATe,CAAhB;AAUA,eAAO;AACLC,UAAAA,WAAW,EAAE1B,KAAK,CAAC2B,eAAN,CACV,wBAAuBX,YAAa,uCAD1B,EAEX,OAFW,CADR;AAKLY,UAAAA,IAAI,EAAE,IAAItB,cAAJ,CAAmBD,UAAnB,CALD;;AAMLwB,UAAAA,OAAO,CAACC,MAAD,EAAS;AACd,mBACGA,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACC,UAAP,CAAkBX,UAAxC,IAAuD,CADzD;AAGD;;AAVI,SAAP;AAYD,OAzBuB,EA0BxB;AACEY,QAAAA,6BAA6B,EAAE;AADjC,OA1BwB;AAD5B,KAFW,EAkCV,oCAAmCjB,IAAI,CAACE,IAAK,GAlCnC,CAAb;AAoCD,GAjEH,EAkEE,CAAC,wBAAD,CAlEF;AAoED,C","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgConnectionTotalCount(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, context) => {\n      const {\n        extend,\n        inflection,\n        graphql: { GraphQLInt, GraphQLNonNull },\n        pgSql: sql,\n      } = build;\n      const {\n        scope: { isPgRowConnectionType, pgIntrospection: table, nodeType },\n        fieldWithHooks,\n        Self,\n      } = context;\n\n      if (!isPgRowConnectionType) {\n        return fields;\n      }\n\n      const nodeTypeName =\n        nodeType && nodeType.name\n          ? nodeType.name\n          : table && table.kind === \"class\"\n          ? inflection.tableType(table)\n          : null;\n      if (!nodeTypeName) {\n        return fields;\n      }\n\n      return extend(\n        fields,\n        {\n          totalCount: fieldWithHooks(\n            \"totalCount\",\n            ({ addDataGenerator }) => {\n              addDataGenerator(() => {\n                return {\n                  pgAggregateQuery: aggregateQueryBuilder => {\n                    aggregateQueryBuilder.select(\n                      sql.fragment`count(1)`,\n                      \"totalCount\"\n                    );\n                  },\n                };\n              });\n              return {\n                description: build.wrapDescription(\n                  `The count of *all* \\`${nodeTypeName}\\` you could get from the connection.`,\n                  \"field\"\n                ),\n                type: new GraphQLNonNull(GraphQLInt),\n                resolve(parent) {\n                  return (\n                    (parent.aggregates && parent.aggregates.totalCount) || 0\n                  );\n                },\n              };\n            },\n            {\n              isPgConnectionTotalCountField: true,\n            }\n          ),\n        },\n        `Adding totalCount to connection '${Self.name}'`\n      );\n    },\n    [\"PgConnectionTotalCount\"]\n  );\n}: Plugin);\n"],"file":"PgConnectionTotalCount.js"}