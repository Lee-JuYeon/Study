{"version":3,"sources":["../../src/plugins/PgOrderAllColumnsPlugin.js"],"names":["PgOrderAllColumnsPlugin","builder","hook","values","build","context","extend","pgColumnFilter","inflection","pgOmit","omit","describePgEntity","sqlCommentByAddingTags","scope","isPgRowSortEnum","pgIntrospection","table","kind","attributes","reduce","memo","attr","unique","isUnique","ascFieldName","orderByColumnEnum","descFieldName","value","alias","toLowerCase","specs","name"],"mappings":";;;;;;;IAGyBA,uB,GAAT,SAASA,uBAAT,CAAiCC,OAAjC,EAA0C;AACxDA,EAAAA,OAAO,CAACC,IAAR,CACE,wBADF,EAEE,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,KAA4B;AAC1B,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,cAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,MAAM,EAAEC,IAJJ;AAKJC,MAAAA,gBALI;AAMJC,MAAAA;AANI,QAOFR,KAPJ;AAQA,UAAM;AACJS,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAF;AAAmBC,QAAAA,eAAe,EAAEC;AAApC;AADH,QAEFX,OAFJ;;AAGA,QAAI,CAACS,eAAD,IAAoB,CAACE,KAArB,IAA8BA,KAAK,CAACC,IAAN,KAAe,OAAjD,EAA0D;AACxD,aAAOd,MAAP;AACD;;AACD,WAAOG,MAAM,CACXH,MADW,EAEXa,KAAK,CAACE,UAAN,CAAiBC,MAAjB,CAAwB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC;AACA,UAAI,CAACd,cAAc,CAACc,IAAD,EAAOjB,KAAP,EAAcC,OAAd,CAAnB,EAA2C,OAAOe,IAAP;AAC3C,UAAIV,IAAI,CAACW,IAAD,EAAO,OAAP,CAAR,EAAyB,OAAOD,IAAP;AACzB,YAAME,MAAM,GAAGD,IAAI,CAACE,QAApB;AAEA,YAAMC,YAAY,GAAGhB,UAAU,CAACiB,iBAAX,CAA6BJ,IAA7B,EAAmC,IAAnC,CAArB;AACA,YAAMK,aAAa,GAAGlB,UAAU,CAACiB,iBAAX,CAA6BJ,IAA7B,EAAmC,KAAnC,CAAtB;AACAD,MAAAA,IAAI,GAAGd,MAAM,CACXc,IADW,EAEX;AACE,SAACI,YAAD,GAAgB;AACdG,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAEJ,YAAY,CAACK,WAAb,EADF;AAELC,YAAAA,KAAK,EAAE,CAAC,CAACT,IAAI,CAACU,IAAN,EAAY,IAAZ,CAAD,CAFF;AAGLT,YAAAA;AAHK;AADO;AADlB,OAFW,EAWV,2CAA0CX,gBAAgB,CACzDU,IADyD,CAEzD,4DAA2DT,sBAAsB,CACjFS,IADiF,EAEjF;AACEU,QAAAA,IAAI,EAAE;AADR,OAFiF,CAKjF,EAlBS,CAAb;AAoBAX,MAAAA,IAAI,GAAGd,MAAM,CACXc,IADW,EAEX;AACE,SAACM,aAAD,GAAiB;AACfC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAEF,aAAa,CAACG,WAAd,EADF;AAELC,YAAAA,KAAK,EAAE,CAAC,CAACT,IAAI,CAACU,IAAN,EAAY,KAAZ,CAAD,CAFF;AAGLT,YAAAA;AAHK;AADQ;AADnB,OAFW,EAWV,4CAA2CX,gBAAgB,CAC1DU,IAD0D,CAE1D,4DAA2DT,sBAAsB,CACjFS,IADiF,EAEjF;AACEU,QAAAA,IAAI,EAAE;AADR,OAFiF,CAKjF,EAlBS,CAAb;AAoBA,aAAOX,IAAP;AACD,KAjDD,EAiDG,EAjDH,CAFW,EAoDV,mCAAkCJ,KAAK,CAACe,IAAK,GApDnC,CAAb;AAsDD,GAvEH,EAwEE,CAAC,mBAAD,CAxEF;AA0ED,C","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgOrderAllColumnsPlugin(builder) {\n  builder.hook(\n    \"GraphQLEnumType:values\",\n    (values, build, context) => {\n      const {\n        extend,\n        pgColumnFilter,\n        inflection,\n        pgOmit: omit,\n        describePgEntity,\n        sqlCommentByAddingTags,\n      } = build;\n      const {\n        scope: { isPgRowSortEnum, pgIntrospection: table },\n      } = context;\n      if (!isPgRowSortEnum || !table || table.kind !== \"class\") {\n        return values;\n      }\n      return extend(\n        values,\n        table.attributes.reduce((memo, attr) => {\n          // PERFORMANCE: These used to be .filter(...) calls\n          if (!pgColumnFilter(attr, build, context)) return memo;\n          if (omit(attr, \"order\")) return memo;\n          const unique = attr.isUnique;\n\n          const ascFieldName = inflection.orderByColumnEnum(attr, true);\n          const descFieldName = inflection.orderByColumnEnum(attr, false);\n          memo = extend(\n            memo,\n            {\n              [ascFieldName]: {\n                value: {\n                  alias: ascFieldName.toLowerCase(),\n                  specs: [[attr.name, true]],\n                  unique,\n                },\n              },\n            },\n            `Adding ascending orderBy enum value for ${describePgEntity(\n              attr\n            )}. You can rename this field with a 'Smart Comment':\\n\\n  ${sqlCommentByAddingTags(\n              attr,\n              {\n                name: \"newNameHere\",\n              }\n            )}`\n          );\n          memo = extend(\n            memo,\n            {\n              [descFieldName]: {\n                value: {\n                  alias: descFieldName.toLowerCase(),\n                  specs: [[attr.name, false]],\n                  unique,\n                },\n              },\n            },\n            `Adding descending orderBy enum value for ${describePgEntity(\n              attr\n            )}. You can rename this field with a 'Smart Comment':\\n\\n  ${sqlCommentByAddingTags(\n              attr,\n              {\n                name: \"newNameHere\",\n              }\n            )}`\n          );\n          return memo;\n        }, {}),\n        `Adding order values from table '${table.name}'`\n      );\n    },\n    [\"PgOrderAllColumns\"]\n  );\n}: Plugin);\n"],"file":"PgOrderAllColumnsPlugin.js"}