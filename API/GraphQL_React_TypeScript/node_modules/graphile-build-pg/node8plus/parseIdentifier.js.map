{"version":3,"sources":["../src/parseIdentifier.js"],"names":["parseIdentifier","typeIdentifier","match","Error","namespaceName","entityName"],"mappings":";;;;;;;AAAe,SAASA,eAAT,CAAyBC,cAAzB,EAAyC;AACtD,QAAMC,KAAK,GAAGD,cAAc,CAACC,KAAf,CACZ,gEADY,CAAd;AAIA,MAAI,CAACA,KAAL,EACE,MAAM,IAAIC,KAAJ,CACH,oBAAmBF,cAAe,6BAD/B,CAAN;AAIF,SAAO;AACLG,IAAAA,aAAa,EAAEF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAD3B;AAELG,IAAAA,UAAU,EAAEH,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD;AAFxB,GAAP;AAID","sourcesContent":["export default function parseIdentifier(typeIdentifier) {\n  const match = typeIdentifier.match(\n    /^(?:([a-zA-Z0-9_]+)|\"([^\"]*)\")\\.(?:([a-zA-Z0-9_]+)|\"([^\"]*)\")$/\n  );\n\n  if (!match)\n    throw new Error(\n      `Type identifier '${typeIdentifier}' is of the incorrect form.`\n    );\n\n  return {\n    namespaceName: match[1] || match[2],\n    entityName: match[3] || match[4],\n  };\n}\n"],"file":"parseIdentifier.js"}