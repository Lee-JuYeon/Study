{"version":3,"sources":["../../src/plugins/MutationPayloadQueryPlugin.js"],"names":["MutationPayloadQueryPlugin","builder","hook","fields","build","context","$$isQuery","extend","getTypeByName","inflection","scope","isMutationPayload","Self","Query","builtin","query","description","wrapDescription","type","resolve","name"],"mappings":";;;;;;;IAIyBA,0B,GAAT,SAASA,0BAAT,CAAoCC,OAApC,EAA6C;AAC3DA,EAAAA,OAAO,CAACC,IAAR,CACE,0BADF,EAEE,CACEC,MADF,EAEEC,KAFF,EAGEC,OAHF,KAIS;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA,aAArB;AAAoCC,MAAAA;AAApC,QAAmDL,KAAzD;AACA,UAAM;AACJM,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF,OADH;AAEJC,MAAAA;AAFI,QAGFP,OAHJ;;AAIA,QAAI,CAACM,iBAAL,EAAwB;AACtB,aAAOR,MAAP;AACD;;AACD,UAAMU,KAAK,GAAGL,aAAa,CAACC,UAAU,CAACK,OAAX,CAAmB,OAAnB,CAAD,CAA3B;AACA,WAAOP,MAAM,CACXJ,MADW,EAEX;AACEY,MAAAA,KAAK,EAAE;AACLC,QAAAA,WAAW,EAAEZ,KAAK,CAACa,eAAN,CACX,kFADW,EAEX,OAFW,CADR;AAKLC,QAAAA,IAAI,EAAEL,KALD;;AAMLM,QAAAA,OAAO,GAAG;AACR,iBAAOb,SAAP;AACD;;AARI;AADT,KAFW,EAcV,4CAA2CM,IAAI,CAACQ,IAAK,EAd3C,CAAb;AAgBD,GAhCH,EAiCE,CAAC,sBAAD,CAjCF;AAmCD,C","sourcesContent":["// @flow\nimport type { Plugin, Build } from \"../SchemaBuilder\";\nimport type { BuildExtensionQuery } from \"./QueryPlugin\";\n\nexport default (function MutationPayloadQueryPlugin(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (\n      fields: {},\n      build: {| ...Build, ...BuildExtensionQuery |},\n      context\n    ): {} => {\n      const { $$isQuery, extend, getTypeByName, inflection } = build;\n      const {\n        scope: { isMutationPayload },\n        Self,\n      } = context;\n      if (!isMutationPayload) {\n        return fields;\n      }\n      const Query = getTypeByName(inflection.builtin(\"Query\"));\n      return extend(\n        fields,\n        {\n          query: {\n            description: build.wrapDescription(\n              \"Our root query field type. Allows us to run any query from our mutation payload.\",\n              \"field\"\n            ),\n            type: Query,\n            resolve() {\n              return $$isQuery;\n            },\n          },\n        },\n        `Adding 'query' field to mutation payload ${Self.name}`\n      );\n    },\n    [\"MutationPayloadQuery\"]\n  );\n}: Plugin);\n"],"file":"MutationPayloadQueryPlugin.js"}