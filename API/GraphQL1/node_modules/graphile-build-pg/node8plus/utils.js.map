{"version":3,"sources":["../src/utils.js"],"names":["parseTags","str","split","reduce","prev","curr","text","match","key","slice","trim","value","replace","tags","Object","prototype","hasOwnProperty","call","Array","isArray"],"mappings":";;;;;;;AACO,MAAMA,SAAS,GAAIC,GAAD,IAAiB;AACxC,SAAOA,GAAG,CAACC,KAAJ,CAAU,OAAV,EAAmBC,MAAnB,CACL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACd,QAAID,IAAI,CAACE,IAAL,KAAc,EAAlB,EAAsB;AACpB,aAAO,EAAE,GAAGF,IAAL;AAAWE,QAAAA,IAAI,EAAG,GAAEF,IAAI,CAACE,IAAK,KAAID,IAAK;AAAvC,OAAP;AACD;;AACD,UAAME,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,+BAAX,CAAd;;AACA,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,EAAE,GAAGH,IAAL;AAAWE,QAAAA,IAAI,EAAED;AAAjB,OAAP;AACD;;AACD,UAAMG,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,CAAf,EAAkBC,IAAlB,EAAZ;AACA,UAAMC,KAAK,GAAGJ,KAAK,CAAC,CAAD,CAAL,KAAaF,IAAb,GAAoB,IAApB,GAA2BA,IAAI,CAACO,OAAL,CAAaL,KAAK,CAAC,CAAD,CAAlB,EAAuB,EAAvB,CAAzC;AACA,WAAO,EACL,GAAGH,IADE;AAELS,MAAAA,IAAI,EAAE,EACJ,GAAGT,IAAI,CAACS,IADJ;AAEJ,SAACL,GAAD,GAAO,CAACM,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,IAAI,CAACS,IAA1C,EAAgDL,GAAhD,CAAD,GACHG,KADG,GAEHO,KAAK,CAACC,OAAN,CAAcf,IAAI,CAACS,IAAL,CAAUL,GAAV,CAAd,IACA,CAAC,GAAGJ,IAAI,CAACS,IAAL,CAAUL,GAAV,CAAJ,EAAoBG,KAApB,CADA,GAEA,CAACP,IAAI,CAACS,IAAL,CAAUL,GAAV,CAAD,EAAiBG,KAAjB;AANA;AAFD,KAAP;AAWD,GAtBI,EAuBL;AACEE,IAAAA,IAAI,EAAE,EADR;AAEEP,IAAAA,IAAI,EAAE;AAFR,GAvBK,CAAP;AA4BD,CA7BM","sourcesContent":["// @flow\nexport const parseTags = (str: string) => {\n  return str.split(/\\r?\\n/).reduce(\n    (prev, curr) => {\n      if (prev.text !== \"\") {\n        return { ...prev, text: `${prev.text}\\n${curr}` };\n      }\n      const match = curr.match(/^@[a-zA-Z][a-zA-Z0-9_]*($|\\s)/);\n      if (!match) {\n        return { ...prev, text: curr };\n      }\n      const key = match[0].slice(1).trim();\n      const value = match[0] === curr ? true : curr.replace(match[0], \"\");\n      return {\n        ...prev,\n        tags: {\n          ...prev.tags,\n          [key]: !Object.prototype.hasOwnProperty.call(prev.tags, key)\n            ? value\n            : Array.isArray(prev.tags[key])\n            ? [...prev.tags[key], value]\n            : [prev.tags[key], value],\n        },\n      };\n    },\n    {\n      tags: {},\n      text: \"\",\n    }\n  );\n};\n"],"file":"utils.js"}