{"version":3,"sources":["../../src/plugins/PgConnectionArgOrderByDefaultValue.js"],"names":["PgConnectionArgOrderByDefaultValue","builder","hook","args","build","context","extend","getTypeByName","pgGetGqlTypeByTypeIdAndModifier","inflection","scope","fieldName","isPgFieldConnection","pgFieldIntrospection","table","Self","kind","namespace","isSelectable","orderBy","TableType","type","id","tableTypeName","name","TableOrderByType","orderByType","primaryKeyAsc","builtin","defaultValueEnum","getValues","find","v","defaultValue","value"],"mappings":";;;;;;;IAGyBA,kC,GAAT,SAASA,kCAAT,CAA4CC,OAA5C,EAAqD;AACnEA,EAAAA,OAAO,CAACC,IAAR,CACE,qCADF,EAEE,CAACC,IAAD,EAAOC,KAAP,EAAcC,OAAd,KAA0B;AACxB,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,aAFI;AAGJC,MAAAA,+BAHI;AAIJC,MAAAA;AAJI,QAKFL,KALJ;AAMA,UAAM;AACJM,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,mBAAb;AAAkCC,QAAAA,oBAAoB,EAAEC;AAAxD,OADH;AAEJC,MAAAA;AAFI,QAGFV,OAHJ;;AAKA,QACE,CAACO,mBAAD,IACA,CAACE,KADD,IAEAA,KAAK,CAACE,IAAN,KAAe,OAFf,IAGA,CAACF,KAAK,CAACG,SAHP,IAIA,CAACH,KAAK,CAACI,YAJP,IAKA,CAACf,IAAI,CAACgB,OANR,EAOE;AACA,aAAOhB,IAAP;AACD;;AACD,UAAMiB,SAAS,GAAGZ,+BAA+B,CAACM,KAAK,CAACO,IAAN,CAAWC,EAAZ,EAAgB,IAAhB,CAAjD;AACA,UAAMC,aAAa,GAAGH,SAAS,CAACI,IAAhC;AACA,UAAMC,gBAAgB,GAAGlB,aAAa,CACpCE,UAAU,CAACiB,WAAX,CAAuBH,aAAvB,CADoC,CAAtC;;AAGA,QAAI,CAACE,gBAAL,EAAuB;AACrB,aAAOtB,IAAP;AACD;;AAED,UAAMwB,aAAa,GAAGlB,UAAU,CAACmB,OAAX,CAAmB,iBAAnB,CAAtB;AACA,UAAMC,gBAAgB,GACpBJ,gBAAgB,CAACK,SAAjB,GAA6BC,IAA7B,CAAkCC,CAAC,IAAIA,CAAC,CAACR,IAAF,KAAWG,aAAlD,KACAF,gBAAgB,CAACK,SAAjB,GAA6B,CAA7B,CAFF;AAIA,WAAOxB,MAAM,CAACH,IAAD,EAAO;AAClBgB,MAAAA,OAAO,EAAEb,MAAM,CACbH,IAAI,CAACgB,OADQ,EAEb;AACEc,QAAAA,YAAY,EAAEJ,gBAAgB,IAAI,CAACA,gBAAgB,CAACK,KAAlB;AADpC,OAFa,EAKZ,6CAA4CvB,SAAU,SAAQI,IAAI,CAACS,IAAK,GAL5D;AADG,KAAP,CAAb;AASD,GA/CH,EAgDE,CAAC,oCAAD,CAhDF;AAkDD,C","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgConnectionArgOrderByDefaultValue(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields:field:args\",\n    (args, build, context) => {\n      const {\n        extend,\n        getTypeByName,\n        pgGetGqlTypeByTypeIdAndModifier,\n        inflection,\n      } = build;\n      const {\n        scope: { fieldName, isPgFieldConnection, pgFieldIntrospection: table },\n        Self,\n      } = context;\n\n      if (\n        !isPgFieldConnection ||\n        !table ||\n        table.kind !== \"class\" ||\n        !table.namespace ||\n        !table.isSelectable ||\n        !args.orderBy\n      ) {\n        return args;\n      }\n      const TableType = pgGetGqlTypeByTypeIdAndModifier(table.type.id, null);\n      const tableTypeName = TableType.name;\n      const TableOrderByType = getTypeByName(\n        inflection.orderByType(tableTypeName)\n      );\n      if (!TableOrderByType) {\n        return args;\n      }\n\n      const primaryKeyAsc = inflection.builtin(\"PRIMARY_KEY_ASC\");\n      const defaultValueEnum =\n        TableOrderByType.getValues().find(v => v.name === primaryKeyAsc) ||\n        TableOrderByType.getValues()[0];\n\n      return extend(args, {\n        orderBy: extend(\n          args.orderBy,\n          {\n            defaultValue: defaultValueEnum && [defaultValueEnum.value],\n          },\n          `Adding defaultValue to orderBy for field '${fieldName}' of '${Self.name}'`\n        ),\n      });\n    },\n    [\"PgConnectionArgOrderByDefaultValue\"]\n  );\n}: Plugin);\n"],"file":"PgConnectionArgOrderByDefaultValue.js"}